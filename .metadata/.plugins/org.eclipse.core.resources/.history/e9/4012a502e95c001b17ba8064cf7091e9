package com.solvright.streamkafka;

import java.util.Properties;

import org.apache.kafka.common.serialization.Serdes;
import org.apache.kafka.streams.StreamsBuilder;
import org.apache.kafka.streams.StreamsConfig;
import org.apache.kafka.streams.kstream.KStream;

import com.google.gson.JsonParser;

public class TweetsFilter {

	public static void main(String[] args) {
		// Create properties
		Properties properties = new Properties();
		properties.setProperty(StreamsConfig.BOOTSTRAP_SERVERS_CONFIG, "127.0.0.1");
		properties.setProperty(StreamsConfig.APPLICATION_ID_CONFIG, "kafka-application-stream");
		properties.setProperty(StreamsConfig.DEFAULT_KEY_SERDE_CLASS_CONFIG, Serdes.StringSerde.class.getName());
		properties.setProperty(StreamsConfig.DEFAULT_VALUE_SERDE_CLASS_CONFIG, Serdes.StringSerde.class.getName());

		// create a topology
		StreamsBuilder streamBuilder = new StreamsBuilder();
		// input topic
		KStream<String, String> inputTopic = streamBuilder.stream("twitter_tweets");
		inputTopic.filter((K, jsonTweet) -> {

		});
		// build the topology

		// start our streams application

	}

	private static int extractFollwers(String value) {
		return JsonParser.parseString(value).getAsJsonObject().get("user").getAsJsonObject().get("followers_count")
				.getAsInt();
	}

}
